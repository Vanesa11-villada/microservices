version: "3.8"

services:
  # -------------------------
  # 1) MySQL para Spring Boot
  # -------------------------
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: calendario_festivo      # crea la base
      MYSQL_USER: user                        # nuevo usuario
      MYSQL_PASSWORD: pass                    # contraseña de ese usuario
    healthcheck:
      test: ["CMD", "mysqladmin","ping","-h","localhost"]
      interval: 10s
      retries: 5
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend

  # -------------------------
  # 2) Spring Boot
  # -------------------------
  spring-service:
    build:
      context: ./calendario-api
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    depends_on:
      mysql:
        condition: service_healthy
      express-service:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: >
        jdbc:mysql://mysql:3306/calendario_festivo
        ?useSSL=false
        &allowPublicKeyRetrieval=true
        &serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      # ← Aquí inyectamos la URL para tu @Value
      FESTIVOS_API_URL: http://express-service:3000/api/holidays
    networks:
      - backend
  # -------------------------
  # 3) MongoDB para Express
  # -------------------------
  mongodb:
    image: mongo:6
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  # -------------------------
  # 4) Express + MongoDB
  # -------------------------
  express-service:
    build:
      context: ./festivos-api
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    depends_on:
      - mongodb
    environment:
      MONGODB_URI: mongodb://mongodb:27017/festivos
    networks:
      - backend

volumes:
  mysql-data:
  mongo-data:

networks:
  backend:
    driver: bridge
